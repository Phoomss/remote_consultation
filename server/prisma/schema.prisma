generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  OFFICER
}

enum BookingType {
  bloodTest
  consult
}

enum CaseStatus {
  accepted
  notAccepting
}

model User {
  id        Int      @id @default(autoincrement())
  title     String
  full_name String
  phone     String   @unique
  age       Int
  username  String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookings        Booking[]
  Case            Case[]
  RiskHistoryInfo RiskHistoryInfo[]

  @@map("users")
}

model Physician {
  id        Int       @id @default(autoincrement())
  full_name String
  phone     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[]

  cases Case[]

  @@map("physicians")
}

model Booking {
  id          Int         @id @default(autoincrement())
  userId      Int
  physicianId Int
  bookingType BookingType
  appointment DateTime
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  user      User      @relation(fields: [userId], references: [id])
  physician Physician @relation(fields: [physicianId], references: [id])

  Case Case[]

  @@map("bookings")
}

model Case {
  id          Int        @id @default(autoincrement())
  bookingId   Int
  userId      Int
  physicianId Int
  status      CaseStatus
  createdAt   DateTime   @default(now())

  user      User      @relation(fields: [userId], references: [id])
  physician Physician @relation(fields: [physicianId], references: [id])
  booking   Booking   @relation(fields: [bookingId], references: [id])

  RiskHistory RiskHistory[]

  @@map("cases")
}

model RiskHistory {
  id        Int      @id @default(autoincrement())
  caseId    Int
  createdAt DateTime @default(now())

  case Case @relation(fields: [caseId], references: [id])
}

model RiskHistoryInfo {
  id     Int     @id @default(autoincrement())
  userId Int
  othen  String?

  user User @relation(fields: [userId], references: [id])
}
